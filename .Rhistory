labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Second Left In Game', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
anim <- animate(p)
anim_save('kobeAccuracyBySecondsRemaining.gif',anim)
# Accuracy by seconds remaining
p <-kobeData %>%
group_by(seconds_remaining,Year) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=seconds_remaining, y=Accuracy, )) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Second Left In Game', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
animate(p,fps = 20, duration = 15)
# Accuracy by seconds remaining
p <-kobeData %>%
group_by(seconds_remaining,Year) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=seconds_remaining, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Second Left In Game', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
animate(p,fps = 20, duration = 15)
kobeData$Year <- format(as.Date(kobeData$game_date, format="%Y"),"%Y")
kobeData$Year <- floor(as.numeric(kobeData$Year))
head(kobeData)
# Accuracy by seconds remaining
p <-kobeData %>%
group_by(seconds_remaining,Year) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=seconds_remaining, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Second Left In Game', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
animate(p,fps = 20, duration = 15)
# Accuracy by seconds remaining
p <-kobeData %>%
group_by(seconds_remaining,Year) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=seconds_remaining, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Second Left In Game', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
animate(p,fps = 20, duration = 15, nframes=100)
# Accuracy by opponent
kobeData %>%
group_by(opponent) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
mutate(Conference=c("Eastern", "Eastern", "Eastern", "Eastern", "Eastern",
"Eastern", "Western", "Western", "Eastern", "Western",
"Western", "Eastern", "Western", "Western", "Eastern",
"Eastern", "Western", "Eastern", "Western", "Western",
"Eastern", "Western", "Eastern", "Eastern", "Western",
"Western", "Western", "Western", "Western", "Eastern",
"Western", "Western", "Eastern" )) %>%
ggplot(aes(x=reorder(opponent, -Accuracy), y=Accuracy)) +
geom_bar(aes(fill=Conference), stat="identity") +
labs(title="Accuracy by opponent", x="Opponent") +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank(),
axis.text.x=element_text(angle=45, hjust=1),
plot.title=element_text(hjust=0.5))
# Accuracy by opponent
kobeData %>%
group_by(opponent) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=reorder(opponent, -Accuracy), y=Accuracy)) +
geom_bar(aes(fill=Conference), stat="identity") +
labs(title="Accuracy by opponent", x="Opponent") +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank(),
axis.text.x=element_text(angle=45, hjust=1),
plot.title=element_text(hjust=0.5))
# Accuracy by opponent
kobeData %>%
group_by(opponent) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=reorder(opponent, -Accuracy), y=Accuracy)) +
geom_bar(aes(, stat="identity") +
labs(title="Accuracy by opponent", x="Opponent") +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank(),
axis.text.x=element_text(angle=45, hjust=1),
plot.title=element_text(hjust=0.5))
# Accuracy by opponent
kobeData %>%
group_by(opponent) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=reorder(opponent, -Accuracy), y=Accuracy)) +
geom_bar(aes(fill=opponent, stat="identity") +
labs(title="Accuracy by opponent", x="Opponent") +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank(),
axis.text.x=element_text(angle=45, hjust=1),
plot.title=element_text(hjust=0.5))
# Accuracy by opponent
kobeData %>%
group_by(opponent) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=reorder(opponent, -Accuracy), y=Accuracy)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
labs(title="Accuracy by opponent", x="Opponent") +
theme_bw() +
theme(legend.position="bottom",
legend.title=element_blank(),
axis.text.x=element_text(angle=45, hjust=1),
plot.title=element_text(hjust=0.5))
# Accuracy by seconds remaining
p <-kobeData %>%
group_by(seconds_remaining,Year) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=seconds_remaining, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_fill_gradient(low="red", high="green") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Second Left In Game', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
animate(p,fps = 20, duration = 15, nframes=100)
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=seconds_remaining, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_fill_gradient(low="red", high="green") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=shot_zone_basic, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_fill_gradient(low="red", high="green") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(n=count()) %>%
ggplot(aes(x=shot_zone_basic, y=count(), group=Year)) +
geom_count(col="tomato3",show.legend = F)
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(n=count()) %>%
ggplot(aes(x=shot_zone_basic, y=n, group=Year)) +
geom_count(col="tomato3",show.legend = F)
# Accuracy by Main Shot Type
# Accuracy by shot type
p<-kobeData %>%
group_by(action_type) %>%
summarise(Accuracy=mean(shot_made_flag),
counts=n()) %>%
filter(counts>50) %>%
ggplot(aes(x=reorder(action_type, Accuracy), y=Accuracy)) +
geom_point(aes(colour=Accuracy), size=2) +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by shot type") +
theme_bw() +
theme(,
legend.position="none",
plot.title=element_text(hjust=0.5)) +
coord_flip()
p
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(counts=n()) %>%
ggplot(aes(x=shot_zone_basic, y=counts, group=Year)) +
geom_count(col="tomato3",show.legend = F)
scale_fill_gradient(low="red", high="green") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(counts=n()) %>%
ggplot(aes(x=shot_zone_basic, y=counts, group=Year)) +
geom_count(col="tomato3",show.legend = F)+
scale_fill_gradient(low="red", high="green") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(Accuracy=mean(shot_made_flag),counts=n()) %>%
ggplot(aes(x=shot_zone_basic, y=Accuracy, group=Year)) +
geom_count(col="tomato3",show.legend = F)+
scale_fill_gradient(low="red", high="green") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(Accuracy=mean(shot_made_flag),counts=n()) %>%
ggplot(aes(x=shot_zone_basic, y=Accuracy, group=Year)) +
geom_point(aes(colour=Accuracy), size=2) +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(Accuracy=mean(shot_made_flag),counts=n()) %>%
ggplot(aes(x=shot_zone_basic, y=Accuracy, group=Year)) +
geom_point(aes(colour=Accuracy), size=2) +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Second Left In Game', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
p
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(Accuracy=mean(shot_made_flag),counts=n()) %>%
ggplot(aes(x=shot_zone_basic, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") + +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Shot Location Over Time', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
# Accuracy by Location over Time
p <-kobeData %>%
group_by(shot_zone_basic,Year) %>%
summarise(Accuracy=mean(shot_made_flag),counts=n()) %>%
ggplot(aes(x=shot_zone_basic, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Shot Location Over Time', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
p
p <- kobeData %>%
group_by(playoffs)%>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=playoffs, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity")+
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p <- kobeData %>%
group_by(playoffs)%>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=playoffs, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity")+
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p
p <- kobeData %>%
group_by(playoffs)%>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=playoffs, y=Accuracy)) +
geom_bar(aes(fill=Accuracy), stat="identity")+
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p
p <- kobeData %>%
group_by(playoffs)%>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=playoffs, y=Accuracy)) +
geom_bar(aes(fill=Accuracy), stat="identity")+
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by seconds remaining", x="In Playoffs")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p
# Accuracy by opponent
kobeData %>%
group_by(opponent) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=reorder(opponent, -Accuracy), y=Accuracy)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
labs(title="Accuracy by opponent", x="Opponent") +
theme_bw() +
theme(legend.position=none)
# Accuracy by opponent
kobeData %>%
group_by(opponent) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=reorder(opponent, -Accuracy), y=Accuracy)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
labs(title="Accuracy by opponent", x="Opponent") +
theme_bw() +
theme(legend.position="none")
p <- kobeData %>%
group_by(playoffs)%>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=playoffs, y=Accuracy)) +
geom_bar(aes(fill=Accuracy), stat="identity")+
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy in Playoffs", x="In Playoffs")  +
theme_bw() +
theme(legend.position="bottom",
plot.title=element_text(hjust=0.5))
p
p <- kobeData %>%
group_by(playoffs)%>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=playoffs, y=Accuracy)) +
geom_bar(aes(fill=Accuracy), stat="identity")+
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy in Playoffs", x="In Playoffs")  +
theme_bw() +
theme(legend.position="bottom")
p
p <- kobeData %>%
group_by(playoffs)%>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=playoffs, y=Accuracy)) +
geom_bar(aes(fill=playoffs), stat="identity")+
scale_fill_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy in Playoffs", x="In Playoffs")  +
theme_bw() +
theme(legend.position="bottom")
p
# Accuracy by seconds remaining
p <-kobeData %>%
group_by(seconds_remaining,Year) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=seconds_remaining, y=Accuracy, group=Year)) +
geom_bar(aes(fill=Accuracy), stat="identity") +
scale_fill_gradient(low="red", high="green") +
labs(title="Accuracy by seconds remaining", x="Seconds remaining")  +
theme_bw() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))+
labs(title = 'Year: {frame_time}', x = 'Second Left In Game', y = 'Accuracy') +
transition_time(Year) +
ease_aes('linear')
animate(p, nframes=100)
# Accuracy by Main Shot Type
# Accuracy by shot type
p<-kobeData %>%
group_by(action_type,Year) %>%
summarise(Accuracy=mean(shot_made_flag),
counts=n()) %>%
filter(counts>50) %>%
ggplot(aes(x=reorder(action_type, Accuracy), y=Accuracy)) +
geom_point(aes(colour=Accuracy), size=2) +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title='Year: {frame_time}: Accuracy by shot type') +
theme_bw() +
theme(,
legend.position="none",
plot.title=element_text(hjust=0.5)) +
transition_time(Year) +
ease_aes('linear')+
coord_flip()
animate(p, nframes=100)
# Accuracy by Main Shot Type
# Accuracy by shot type
p<-kobeData %>%
group_by(action_type,Year) %>%
summarise(Accuracy=mean(shot_made_flag),
counts=n()) %>%
filter(counts>10) %>%
ggplot(aes(x=reorder(action_type, Accuracy), y=Accuracy)) +
geom_point(aes(colour=Accuracy), size=2) +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title='Year: {frame_time}: Accuracy by shot type') +
theme_bw() +
theme(legend.title=element_text(),
legend.position="none",
plot.title=element_text(hjust=0.5)) +
transition_time(Year) +
ease_aes('linear')+
coord_flip()
animate(p, nframes=500)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
library(ggplot2)
library(knitr)
library(gganimate)
library(gapminder)
kobeData <- read.csv('kobe_data.csv');
kobeData  <-na.omit(kobeData);
summary(kobeData)
str(kobeData)
# action type, combined shot type, lat, long,
# -c(columnNumbers)
# cleanedData <- kobeData[-c()]
# cor(kobeData)
#names(kobeData)[names(kobeData) == "combined_shot_type"] <- "Type of Shots"
kobeData$Year <- format(as.Date(kobeData$game_date, format="%Y"),"%Y")
kobeData$Year <- floor(as.numeric(kobeData$Year))
head(kobeData)
# Shot type
ggplot() +
# We use a different alpha value for jump shots to improve the visualization
geom_point(data=kobeData %>% filter(combined_shot_type=="Jump Shot"),
aes(x=lon, y=lat), colour="black", alpha=0.1) +
geom_point(data=kobeData %>% filter(combined_shot_type!="Jump Shot"),
aes(x=lon, y=lat, colour=combined_shot_type), alpha=0.8) +
labs(title="Combined Shot Type Visualized on Court", captions = "(based on data from Kaggle and NBA.com)",
x="Latitude", y="Longitude") +
theme(legend.title=element_text(),
plot.title=element_text())
# Accuracy by Main Shot Type
# Accuracy by shot type
p<-kobeData %>%
group_by(action_type,Year) %>%
summarise(Accuracy=mean(shot_made_flag),
counts=n()) %>%
filter(counts>10) %>%
ggplot(aes(x=reorder(action_type, Accuracy), y=Accuracy)) +
geom_point(aes(colour=Accuracy), size=2) +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title='Year: {frame_time}: Accuracy by shot type') +
theme_bw() +
theme(legend.title=element_text(),
legend.position="none",
plot.title=element_text(hjust=0.5)) +
transition_time(Year) +
ease_aes('linear')+
coord_flip()
animate(p, renderer = ffmpeg_renderer(format = "auto"))
install.packages('ffmpeg')
# Accuracy by Main Shot Type
# Accuracy by shot type
p<-kobeData %>%
group_by(action_type,Year) %>%
summarise(Accuracy=mean(shot_made_flag),
counts=n()) %>%
filter(counts>10) %>%
ggplot(aes(x=reorder(action_type, Accuracy), y=Accuracy)) +
geom_point(aes(colour=Accuracy), size=2) +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title='Year: {frame_time}: Accuracy by shot type') +
theme_bw() +
theme(legend.title=element_text(),
legend.position="none",
plot.title=element_text(hjust=0.5)) +
transition_time(Year) +
ease_aes('linear')+
coord_flip()
animate(p, renderer = ffmpeg_renderer(format = "auto"))
